#!/bin/bash

function start() {
    set -e # exit on an error

    exists() {
        type $1 > /dev/null 2>&1
    }

    WARNING(){
        /bin/echo -e "\e[101m\e[97m[WARNING]\e[49m\e[39m $@"
    }

    INFO(){
        /bin/echo -e "\e[104m\e[97m[INFO]\e[49m\e[39m $@"
    }

    ERROR(){
        /bin/echo -e "\e[101m\e[97m[ERROR]\e[49m\e[39m $@"
    }

    if [ ! -d "secret" ]; then
        mkdir secret
    fi

    # Generate SSH keys for the control node
    if [ ! -f ./secret/node.env ]; then
        INFO "Generating key pair"
        ssh-keygen -t rsa -N "" -f ./secret/id_rsa

        INFO "Generating ./secret/control.env"
        echo "# generated by nebula-jepsen/docker/up.sh" > ./secret/control.env
        echo "# NOTE: \\n is expressed as ↩" >> ./secret/control.env
        echo SSH_PRIVATE_KEY="$(cat ./secret/id_rsa | perl -p -e "s/\n/↩/g")" >> ./secret/control.env
        echo SSH_PUBLIC_KEY=$(cat ./secret/id_rsa.pub) >> ./secret/control.env

        INFO "Generating ./secret/node.env"
        echo "# generated by nebula-jepsen/docker/up.sh" > ./secret/node.env
        echo ROOT_PASS=root >> ./secret/node.env
        echo AUTHORIZED_KEYS=$(cat ./secret/id_rsa.pub) >> ./secret/node.env
    else
        INFO "No need to generate key pair"
    fi

    exists docker || { ERROR "Please install docker (https://docs.docker.com/engine/installation/)"; exit 1; }
    exists docker-compose || { ERROR "Please install docker-compose (https://docs.docker.com/compose/install/)"; exit 1; }

    if [ -d "data/" ];then
        rm -rf data/*
    fi
    if [ -d "logs/" ];then
        rm -rf logs/*
    fi
    
    docker build -t wfystx/nebula-node:latest -f ./node/Dockerfile ./node/

    docker-compose -f docker-compose.yaml up -d

    sleep 2s

    docker run -idt --name nebula-console --network=host vesoft/nebula-console:nightly --addr=127.0.0.1 --port=3699 1>/dev/null
    cat create_space.txt | docker exec -i nebula-console /bin/bash
    echo "Test space created"
    docker stop nebula-console | 1>/dev/null
    docker rm nebula-console | 1>/dev/null

    docker run --env-file ./secret/control.env --name nebula-control --privileged=true -it --net docker_nebula-net \
        --link nebula-n1:n1 --link nebula-n2:n2 --link nebula-n3:n3 --link nebula-n4:n4 \
        --link nebula-n5:n5 -v $(pwd)/../:/jepsen -v $(pwd)/control/init.sh:/init.sh \
        -v $(pwd)/control/bashrc:/root/.bashrc wfystx/nebula-control:latest /bin/bash
}

function remove() {
    echo "Removing..."
    for f in $(seq 1 5); do
        docker stop nebula-n$f 1>/dev/null 2>&1
        docker rm nebula-n$f 1>/dev/null 2>&1
    done
    docker stop nebula-graphd 1>/dev/null 2>&1
    docker stop nebula-metad 1>/dev/null 2>&1
    docker stop nebula-control 1>/dev/null 2>&1
    docker stop nebula-console 1>/dev/null 2>&1
    docker rm nebula-graphd 1>/dev/null 2>&1
    docker rm nebula-metad 1>/dev/null 2>&1
    docker rm nebula-control 1>/dev/null 2>&1
    docker rm nebula-console 1>/dev/null 2>&1
    echo "Done!"
}

case $1 in 
    "start")
        start
    ;;
    "remove")
        remove
    ;;
    "help")
        echo "up.sh [start|remove]"
    ;;
    *) 
        start
    ;;
esac